GAS LISTING ulibs.s 			page 1


   1              	# 1 "ulibs.S"
   1              	/**
   0              	
   0              	
   2              	** @file ulibs.S
   3              	**
   4              	** @author Numerous CSCI-452 classes
   5              	**
   6              	** assembly-language user-level library functions
   7              	*/
   8              	
   9              	#define	SP_ASM_SRC
  10              	
  11              	// get the system call codes
  12              	
  13              	#include "syscalls.h"
   1              	/**
   2              	** @file syscalls.h
   3              	**
   4              	** @author CSCI-452 class of 20205
   5              	**
   6              	** System call declarations
   7              	*/
   8              	
   9              	#ifndef SYSCALLS_H_
  10              	#define SYSCALLS_H_
  11              	
  12              	/*
  13              	** General (C and/or assembly) definitions
  14              	**
  15              	** This section of the header file contains definitions that can be
  16              	** used in either C or assembly-language source code.
  17              	*/
  18              	
  19              	#include "common.h"
   1              	/**
  20              	
  14              	
  15              	/**
  16              	** System call stubs
  17              	**
  18              	** All have the same structure:
  19              	**
  20              	**      move a code into EAX
  21              	**      generate the interrupt
  22              	**      return to the caller
  23              	**
  24              	** As these are simple "leaf" routines, we don't use
  25              	** the standard enter/leave method to set up a stack
  26              	** frame - that takes time, and we don't really need it.
  27              	*/
  28              	
  29              	#define	SYSCALL(name) \
  30              		.globl	name			; \
  31              	name:					; \
  32              		movl	$SYS_##name, %eax	; \
  33              		int	$INT_VEC_SYSCALL	; \
GAS LISTING ulibs.s 			page 2


  34              		ret
  35              	
  36              	/*
  37              	** "real" system calls
  38              	*/
  39              	
  40 0000 B8000000 	SYSCALL(exit)
  40      00CD80C3 
  41 0008 B8010000 	SYSCALL(read)
  41      00CD80C3 
  42 0010 B8020000 	SYSCALL(write)
  42      00CD80C3 
  43 0018 B8030000 	SYSCALL(getpid)
  43      00CD80C3 
  44 0020 B8040000 	SYSCALL(getppid)
  44      00CD80C3 
  45 0028 B8050000 	SYSCALL(gettime)
  45      00CD80C3 
  46 0030 B8060000 	SYSCALL(getprio)
  46      00CD80C3 
  47 0038 B8070000 	SYSCALL(setprio)
  47      00CD80C3 
  48 0040 B8080000 	SYSCALL(kill)
  48      00CD80C3 
  49 0048 B8090000 	SYSCALL(sleep)
  49      00CD80C3 
  50 0050 B80A0000 	SYSCALL(spawn)
  50      00CD80C3 
  51 0058 B80B0000 	SYSCALL(wait)
  51      00CD80C3 
  52              	
  53              	/*
  54              	** This is a bogus system call; it's here so that we can test
  55              	** our handling of out-of-range syscall codes in the syscall ISR.
  56              	*/
  57 0060 B8AD0B00 	SYSCALL(bogus)
  57      00CD80C3 
  58              	
  59              	/*
  60              	** Other library functions
  61              	*/
  62              	
  63              	/**
  64              	** exit_helper() - dummy "startup" function
  65              	**
  66              	** calls exit(%eax) - serves as the "return to" code for main()
  67              	** functions, in case they don't call exit() themselves
  68              	*/
  69              	
  70              	        .globl  exit_helper
  71              	exit_helper:
  72 0068 50       	        pushl   %eax    // use whatever was in EAX as the status
  73 0069 E8FCFFFF 	        call    exit    // terminate this process
  73      FF
GAS LISTING ulibs.s 			page 3


DEFINED SYMBOLS
             ulibs.S:40     .text:0000000000000000 exit
             ulibs.S:41     .text:0000000000000008 read
             ulibs.S:42     .text:0000000000000010 write
             ulibs.S:43     .text:0000000000000018 getpid
             ulibs.S:44     .text:0000000000000020 getppid
             ulibs.S:45     .text:0000000000000028 gettime
             ulibs.S:46     .text:0000000000000030 getprio
             ulibs.S:47     .text:0000000000000038 setprio
             ulibs.S:48     .text:0000000000000040 kill
             ulibs.S:49     .text:0000000000000048 sleep
             ulibs.S:50     .text:0000000000000050 spawn
             ulibs.S:51     .text:0000000000000058 wait
             ulibs.S:57     .text:0000000000000060 bogus
             ulibs.S:71     .text:0000000000000068 exit_helper

NO UNDEFINED SYMBOLS
